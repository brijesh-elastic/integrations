---
description: Pipeline for processing vulnerability logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - fail:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      message: error message set and no data to process.
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.classification
      tag: set_vulnerability_classification
      value: CVSS
  - set:
      field: vulnerability.enumeration
      tag: set_vulnerability_enumeration
      value: CVE
  - set:
      field: vulnerability.scanner.vendor
      tag: set_vulnerability_scanner_vendor
      value: Sysdig Secure
  - append:
      field: event.category
      tag: append_vulnerability_into_event_category
      value: vulnerability
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - append:
      field: event.type
      tag: append_info_into_event_type
      value: info
  - set:
      field: event.ingested
      value: "{{{_ingest.timestamp}}}"
      ignore_empty_value: true
      ignore_failure: true
  - rename:
      field: json.package.vulnerability.vulnerabilitiesRefs
      tag: rename_package_vulnerability_vulnerabilitiesRefs
      target_field: sysdig.vulnerability.package.vulnerability.vulnerabilities_ref
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id_from_vulnerability_package_vulnerability_vulnerability_refs
      copy_from: sysdig.vulnerability.package.vulnerability.vulnerabilities_ref
      ignore_empty_value: true
  - set:
      field: observer.vendor
      tag: set_observer_vendor
      value: Sysdig
  - set:
      field: observer.product
      tag: set_observer_product
      value: Sysdig Secure
  - rename:
      field: json.assetType
      tag: rename_assetType
      target_field: sysdig.vulnerability.asset_type
      ignore_missing: true
  - rename:
      field: json.metadata.architecture
      tag: rename_metadata_architecture
      target_field: sysdig.vulnerability.metadata.architecture
      ignore_missing: true
  - set:
      field: host.architecture
      tag: set_host_architecture_from_vulnerability_metadata_architecture
      copy_from: sysdig.vulnerability.metadata.architecture
      ignore_empty_value: true
  - rename:
      field: json.metadata.author
      tag: rename_metadata_author
      target_field: sysdig.vulnerability.metadata.author
      ignore_missing: true
  - rename:
      field: json.metadata.baseOs
      tag: rename_metadata_baseOs
      target_field: sysdig.vulnerability.metadata.base_os
      ignore_missing: true
  - set:
      field: host.os.full
      tag: set_host_os_full_from_vulnerability_metadata_base_os
      copy_from: sysdig.vulnerability.metadata.base_os
      ignore_empty_value: true
  - date:
      field: json.metadata.createdAt
      tag: date_metadata_createdAt
      target_field: sysdig.vulnerability.metadata.created_at
      formats:
        - ISO8601
      if: ctx.json?.metadata?.createdAt != null && ctx.json.metadata.createdAt != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - dissect:
      field: json.metadata.digest
      tag: dissect_package_layers_digest
      pattern: '%{}:%{_tmp.metadata.digest_hash}'
      ignore_failure: true
  - append:
      field: related.hash
      tag: append_sysdig_vulnerability_metadata_digest_hash_into_related_hash
      value: '{{{_tmp.metadata.digest_hash}}}'
      allow_duplicates: false
      if: ctx._tmp?.metadata?.digest_hash != null
  - remove:
      field: _tmp
      tag: remove_tmp
      ignore_missing: true
  - rename:
      field: json.metadata.digest
      tag: rename_metadata_digest
      target_field: sysdig.vulnerability.metadata.digest
      ignore_missing: true
  - append:
      field: container.image.hash.all
      tag: append_sysdig_vulnerability_metadata_digest_into_container_image_hash_all
      value: '{{{sysdig.vulnerability.metadata.digest}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.digest != null
  - rename:
      field: json.metadata.hostId
      tag: rename_metadata_hostId
      target_field: sysdig.vulnerability.metadata.host_id
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host_id_from_vulnerability_metadata_host_id
      copy_from: sysdig.vulnerability.metadata.host_id
      ignore_empty_value: true
  - rename:
      field: json.metadata.hostName
      tag: rename_metadata_hostname
      target_field: sysdig.vulnerability.metadata.hostname
      ignore_missing: true
  - set:
      field: host.hostname
      tag: set_host_hostname_from_host_hostname
      copy_from: sysdig.vulnerability.metadata.hostname
      ignore_empty_value: true
  - set:
      field: host.name
      tag: set_host_name_from_host_hostname
      copy_from: sysdig.vulnerability.metadata.hostname
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_metadata_hostname_into_related_hosts
      value: '{{{sysdig.vulnerability.metadata.hostname}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.hostname != null
  - rename:
      field: json.metadata.imageId
      tag: rename_metadata_imageId
      target_field: sysdig.vulnerability.metadata.image_id
      ignore_missing: true
  - dot_expander:
      field: "*"
      path: json.metadata.labels
      override: true
      ignore_failure: true
  - rename:
      field: json.metadata.labels.homepage
      tag: rename_metadata_labels_homepage
      target_field: sysdig.vulnerability.metadata.labels.homepage
      ignore_missing: true
  - set:
      field: url.domain
      tag: set_url_domain_from_vulnerability_metadata_labels_homepage
      copy_from: sysdig.vulnerability.metadata.labels.homepage
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_metadata_labels_homepage_into_related_hosts
      value: '{{{sysdig.vulnerability.metadata.labels.homepage}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.labels?.homepage != null
  - rename:
      field: json.metadata.labels.io.mend.image.dockerfile.path
      tag: rename_metadata_labels_io_mend_image_dockerfile_path
      target_field: sysdig.vulnerability.metadata.labels.io.mend.image.dockerfile.path
      ignore_missing: true
  - rename:
      field: json.metadata.labels.maintainer
      tag: rename_metadata_labels_maintainer
      target_field: sysdig.vulnerability.metadata.labels.maintainer
      ignore_missing: true
  - dissect:
      field: sysdig.vulnerability.metadata.labels.maintainer
      tag: dissect_metadata_labels_maintainer
      pattern: '%{user.name} <%{user.domain}>'
      ignore_failure: true
  - append:
      field: related.user
      tag: append_sysdig_vulnerability_metadata_labels_maintainer_into_related_user
      value: '{{{sysdig.vulnerability.metadata.labels.maintainer}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.labels?.maintainer != null
  - rename:
      field: json.metadata.labels.org.label-schema.build-date
      tag: rename_metadata_labels_org_label_schema_name
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.build_date
      ignore_missing: true
  - date:
      field: sysdig.vulnerability.metadata.labels.org.label_schema.build_date
      tag: date_metadata_labels_org_label_schema_build_date
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.build_date
      formats:
        - ISO8601
      if: ctx.sysdig?.vulnerability?.metadata?.labels?.org?.label_schema?.build_date != null && ctx.sysdig.vulnerability.metadata.labels.org.label_schema.build_date != ''
      on_failure:
        - remove:
            field: sysdig.vulnerability.metadata.labels.org.label_schema.build_date
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.metadata.labels.org.label-schema.name
      tag: rename_metadata_labels_org_label_schema_name
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.name
      ignore_missing: true
  - set:
      field: container.name
      tag: set_container_name_from_vulnerability_metadata_labels_org_label_schema_name
      copy_from: sysdig.vulnerability.metadata.labels.org.label_schema.name
      ignore_empty_value: true
  - set:
      field: host.hostname
      tag: set_container_name_from_vulnerability_metadata_labels_org_label_schema_name
      copy_from: sysdig.vulnerability.metadata.labels.org.label_schema.name
      ignore_empty_value: true
  - set:
      field: host.name
      tag: set_host_name_from_vulnerability_metadata_labels_org_label_schema_name
      copy_from: sysdig.vulnerability.metadata.labels.org.label_schema.name
      ignore_empty_value: true
  - rename:
      field: json.metadata.labels.org.label-schema.vcs-ref
      tag: rename_metadata_labels_org_label-schema_vcs-ref
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.vcs_ref
      ignore_missing: true
  - gsub:
      field: json.metadata.labels.org.label-schema.vcs-url
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.vcs_url
      pattern: "'"
      replacement: ""
      ignore_missing: true
  - set:
      field: url.full
      tag: set_url_full_from_vulnerability_metadata_labels_org_label_schema_vcs_url
      copy_from: sysdig.vulnerability.metadata.labels.org.label_schema.vcs_url
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_metadata_labels_org_label_schema_vcs_url_into_related_hosts
      value: '{{{sysdig.vulnerability.metadata.labels.org.label_schema.vcs_url}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.labels?.org?.label_schema?.vcs_url != null
  - rename:
      field: json.metadata.labels.org.opencontainers.image.description
      tag: rename_metadata_labels_org_opencontainers_image_description
      target_field: sysdig.vulnerability.metadata.labels.org.opencontainers.image.description
      ignore_missing: true
  - rename:
      field: json.metadata.labels.org.opencontainers.image.source
      tag: rename_metadata_labels_org_opencontainers_image_source
      target_field: sysdig.vulnerability.metadata.labels.org.opencontainers.image.source
      ignore_missing: true
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_metadata_labels_org_opencontainers_image_source_into_related_hosts
      value: '{{{sysdig.vulnerability.metadata.labels.org.opencontainers.image.source}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.labels?.org?.opencontainers?.image?.source != null
  - rename:
      field: json.metadata.labels.org.opencontainers.image.repository
      tag: rename_metadata_labels_org_opencontainers_image_repository
      target_field: sysdig.vulnerability.metadata.labels.repository
      ignore_missing: true
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_metadata_labels_repository_into_related_hosts
      value: '{{{sysdig.vulnerability.metadata.labels.repository}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.labels?.repository != null
  - rename:
      field: json.metadata.os
      tag: rename_metadata_os
      target_field: sysdig.vulnerability.metadata.os
      ignore_missing: true
  - set:
      field: host.os.full
      tag: set_host_os_full_from_sysdig_vulnerability_metadata_os
      copy_from: sysdig.vulnerability.metadata.os
      if: ctx.sysdig?.vulnerability?.metadata?.os != null && ctx.sysdig?.vulnerability?.asset_type == "host"
  - set:
      field: host.os.type
      tag: set_host_os_type_to_linux
      value: linux
      if: >-
        ctx.sysdig?.vulnerability?.metadata?.os != null
        && (ctx.sysdig.vulnerability.metadata.os.startsWith('amazonlinux')
        || ctx.sysdig.vulnerability.metadata.os.startsWith('bottlerocket')
        || ctx.sysdig.vulnerability.metadata.os.startsWith('ubuntu')
        || ctx.sysdig.vulnerability.metadata.os.startsWith('google-cos'))
  - set:
      field: host.os.type
      tag: set_host_os_type_from_metadata_os
      value: linux
      if: ctx.sysdig?.vulnerability?.metadata?.os == "linux"
  - dissect:
      field: host.os.full
      tag: dissect_host_os_full
      pattern: '%{host.os.platform} %{host.os.version}'
      ignore_failure: true
  - rename:
      field: json.metadata.pullString
      tag: rename_metadata_pullString
      target_field: sysdig.vulnerability.metadata.pull_string
      ignore_missing: true
  - convert:
      field: json.metadata.size
      tag: convert_metadata_size_to_long
      target_field: sysdig.vulnerability.metadata.size
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.package.isRemoved
      tag: convert_package_isRemoved_to_boolean
      target_field: sysdig.vulnerability.package.is_removed
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.package.isRunning
      tag: convert_package_isRunning_to_boolean
      target_field: sysdig.vulnerability.package.is_running
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.package.layers.baseImages
      tag: foreach_package_layers_baseImages
      if: ctx.json?.package?.layers?.baseImages instanceof List
      processor:
        rename:
          field: _ingest._value.baseImagesRef
          tag: rename_package_layers_baseImages_baseImagesRef
          target_field: _ingest._value.base_images_ref
          ignore_missing: true
  - foreach:
      field: json.package.layers.baseImages
      tag: foreach_package_layers_baseImages
      if: ctx.json?.package?.layers?.baseImages instanceof List
      processor:
        rename:
          field: _ingest._value.pullStrings
          tag: rename_package_layers_baseImages_pullStrings
          target_field: _ingest._value.pull_strings
          ignore_missing: true
  - rename:
      field: json.package.layers.baseImages
      tag: rename_package_layers_baseImages
      target_field: sysdig.vulnerability.package.layers.base_images
      ignore_missing: true
  - rename:
      field: json.package.layers.command
      tag: rename_package_layers_command
      target_field: sysdig.vulnerability.package.layers.command
      ignore_missing: true
  - dissect:
      field: json.package.layers.digest
      tag: dissect_package_layers_digest
      pattern: '%{sysdig.vulnerability.package.layers.digest_algorithm}:%{sysdig.vulnerability.package.layers.digest_hash}'
      ignore_failure: true
  - append:
      field: related.hash
      tag: append_sysdig_vulnerability_package_layers_digest_hash_into_related_hash
      value: '{{{sysdig.vulnerability.package.layers.digest_hash}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.package?.layers?.digest_hash != null
  - convert:
      field: json.package.layers.index
      tag: convert_package_layers_index_to_long
      target_field: sysdig.vulnerability.package.layers.index
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.package.layers.layerRef
      tag: rename_package_layers_layerRef
      target_field: sysdig.vulnerability.package.layers.layer_ref
      ignore_missing: true
  - convert:
      field: json.package.layers.size
      tag: convert_package_layers_size_to_long
      target_field: sysdig.vulnerability.package.layers.size
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.package.name
      tag: rename_package_name
      target_field: sysdig.vulnerability.package.name
      ignore_missing: true
  - set:
      field: package.name
      tag: set_package_name_from_vulnerability_package_name
      copy_from: sysdig.vulnerability.package.name
      ignore_empty_value: true
  - set:
      field: vulnerability.package.name
      tag: set_vulnerability_package_name_from_vulnerability_package_name
      copy_from: sysdig.vulnerability.package.name
      ignore_empty_value: true
      if: ctx.sysdig?.vulnerability?.package?.vulnerability != null
  - rename:
      field: json.package.packageRef
      tag: rename_package_packageRef
      target_field: sysdig.vulnerability.package.package_ref
      ignore_missing: true
  - rename:
      field: json.package.path
      tag: rename_package_path
      target_field: sysdig.vulnerability.package.path
      ignore_missing: true
  - set:
      field: package.path
      tag: set_package_path_from_vulnerability_package_path
      copy_from: sysdig.vulnerability.package.path
      ignore_empty_value: true
  - rename:
      field: json.package.license
      tag: rename_package_license
      target_field: sysdig.vulnerability.package.license
      ignore_missing: true
  - set:
      field: package.license
      tag: set_package_license_from_vulnerability_package_license
      copy_from: sysdig.vulnerability.package.license
      ignore_empty_value: true
  - rename:
      field: json.package.suggestedFix
      tag: rename_package_suggestedFix
      target_field: sysdig.vulnerability.package.suggested_fix
      ignore_missing: true
  - set:
      field: vulnerability.package.fixed_version
      tag: set_vulnerability_package_fixed_version_from_package_suggested_fix
      copy_from: sysdig.vulnerability.package.suggested_fix
      ignore_empty_value: true
      if: ctx.sysdig?.vulnerability?.package?.vulnerability != null
  - remove:
      field: sysdig.vulnerability.package.suggested_fix
      if: ctx.sysdig?.vulnerability?.package?.vulnerability != null && (ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields'))
      ignore_missing: true
  - rename:
      field: json.package.type
      tag: rename_package_type
      target_field: sysdig.vulnerability.package.type
      ignore_missing: true
  - set:
      field: package.type
      tag: set_package_type_from_vulnerability_package_type
      copy_from: sysdig.vulnerability.package.type
      ignore_empty_value: true
  - rename:
      field: json.package.version
      tag: rename_package_version
      target_field: sysdig.vulnerability.package.version
      ignore_missing: true
  - set:
      field: package.version
      tag: set_package_version_from_vulnerability_package_version
      copy_from: sysdig.vulnerability.package.version
      ignore_empty_value: true
  - set:
      field: vulnerability.package.version
      tag: set_vulnerability_package_version_from_vulnerability_package_version
      copy_from: sysdig.vulnerability.package.version
      ignore_empty_value: true
      if: ctx.sysdig?.vulnerability?.package?.vulnerability != null
  - date:
      field: json.package.vulnerability.providersMetadata.almalinux.publishDate
      tag: date_package_vulnerability_providersMetadata_almalinux_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.almalinux.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.almalinux?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.almalinux.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.amazon.publishDate
      tag: date_package_vulnerability_providersMetadata_amazon_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.amazon.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.amazon?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.amazon.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.cisakev.publishDate
      tag: date_package_vulnerability_providersMetadata_cisakev_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.cisakev.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.cisakev?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.cisakev.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.euleros.publishDate
      tag: date_package_vulnerability_providersMetadata_euleros_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.euleros.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.euleros?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.euleros.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - dot_expander:
      field: '*'
      tag: dot_expander_providers_metadata
      path: json.package.vulnerability.providersMetadata
      if: ctx.json?.package?.vulnerability?.providersMetadata != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.package.vulnerability.providersMetadata.first.org.epssScore.percentile
      tag: convert_package_vulnerability_providersMetadata_first_org_epssScore_percentile_to_double
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.first.org.epss_score.percentile
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.package.vulnerability.providersMetadata.first.org.epssScore.score
      tag: convert_package_vulnerability_providersMetadata_first_org_epssScore_score_to_double
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.first.org.epss_score.score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.first.org.epssScore.timestamp
      tag: date_package_vulnerability_providersMetadata_first_org_epssScore_timestamp
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.first.org.epss_score.timestamp
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.first?.org?.epssScore?.timestamp != null && ctx.json.package.vulnerability.providersMetadata.first.org.epssScore.timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.gentoo.publishDate
      tag: date_package_vulnerability_providersMetadata_gentoo_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.gentoo.publish_date
      formats:
        - strict_date_optional_time_nanos
      if: ctx.json?.package?.vulnerability?.providersMetadata?.gentoo?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.gentoo.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.github.publishDate
      tag: date_package_vulnerability_providersMetadata_github_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.github.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.github?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.github.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.gitlab.publishDate
      tag: date_package_vulnerability_providersMetadata_gitlab_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.gitlab.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.gitlab?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.gitlab.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.package.vulnerability.providersMetadata.nvd.cvssScore.score
      tag: convert_package_vulnerability_providersMetadata_nvd_cvssScore_score_to_double
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.nvd.cvss_score.score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.package.vulnerability.providersMetadata.nvd.cvssScore.vector
      tag: rename_package_vulnerability_providersMetadata_nvd_cvssScore_vector
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.nvd.cvss_score.vector
      ignore_missing: true
  - rename:
      field: json.package.vulnerability.providersMetadata.nvd.cvssScore.version
      tag: rename_package_vulnerability_providersMetadata_nvd_cvssScore_version
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.nvd.cvss_score.version
      ignore_missing: true
  - date:
      field: json.package.vulnerability.providersMetadata.nvd.publishDate
      tag: date_package_vulnerability_providersMetadata_nvd_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.nvd.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.nvd?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.nvd.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.package.vulnerability.providersMetadata.nvd.severity
      tag: rename_package_vulnerability_providersMetadata_nvd_severity
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.nvd.severity
      ignore_missing: true
  - date:
      field: json.package.vulnerability.providersMetadata.pypiadvisory.publishDate
      tag: date_package_vulnerability_providersMetadata_pypiadvisory_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.pypiadvisory.publish-date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.pypiadvisory?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.pypiadvisory.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.package.vulnerability.providersMetadata.rhel.cvssScore.score
      tag: convert_package_vulnerability_providersMetadata_rhel_cvssScore_score_to_double
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.rhel.cvss_score.score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.package.vulnerability.providersMetadata.rhel.cvssScore.vector
      tag: rename_package_vulnerability_providersMetadata_rhel_cvssScore_vector
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.rhel.cvss_score.vector
      ignore_missing: true
  - rename:
      field: json.package.vulnerability.providersMetadata.rhel.cvssScore.version
      tag: rename_package_vulnerability_providersMetadata_rhel_cvssScore_version
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.rhel.cvss_score.version
      ignore_missing: true
  - date:
      field: json.package.vulnerability.providersMetadata.rhel.publishDate
      tag: date_package_vulnerability_providersMetadata_rhel_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.rhel.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.rhel?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.rhel.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.package.vulnerability.providersMetadata.rhel.severity
      tag: rename_package_vulnerability_providersMetadata_rhel_severity
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.rhel.severity
      ignore_missing: true
  - date:
      field: json.package.vulnerability.providersMetadata.rocky.publishDate
      tag: date_package_vulnerability_providersMetadata_rocky_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.rocky.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.rocky?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.rocky.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.rubyadvisory.publishDate
      tag: date_package_vulnerability_providersMetadata_rubyadvisory_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.rubyadvisory.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.rubyadvisory?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.rubyadvisory.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.ubuntu.publishDate
      tag: date_package_vulnerability_providersMetadata_ubuntu_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.ubuntu.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.ubuntu?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.ubuntu.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.providersMetadata.vulndb.publishDate
      tag: date_package_vulnerability_providersMetadata_vulndb_publishDate
      target_field: sysdig.vulnerability.package.vulnerability.providers_metadata.vulndb.publish_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.providersMetadata?.vulndb?.publishDate != null && ctx.json.package.vulnerability.providersMetadata.vulndb.publishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.package.vulnerability.cvssScore.score
      tag: convert_package_vulnerability_cvssScore_score_to_double
      target_field: sysdig.vulnerability.package.vulnerability.cvss_score.score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.score.base
      tag: set_vulnerability_score_base_from_vulnerability_package_vulnerability_cvss_score_score
      copy_from: sysdig.vulnerability.package.vulnerability.cvss_score.score
      ignore_empty_value: true
  - rename:
      field: json.package.vulnerability.cvssScore.vector
      tag: rename_package_vulnerability_cvssScore_vector
      target_field: sysdig.vulnerability.package.vulnerability.cvss_score.vector
      ignore_missing: true
  - rename:
      field: json.package.vulnerability.cvssScore.version
      tag: rename_package_vulnerability_cvssScore_version
      target_field: sysdig.vulnerability.package.vulnerability.cvss_score.version
      ignore_missing: true
  - set:
      field: vulnerability.score.version
      tag: set_vulnerability_score_version_from_vulnerability_package_vulnerability_cvss_score_version
      copy_from: sysdig.vulnerability.package.vulnerability.cvss_score.version
      ignore_empty_value: true
  - date:
      field: json.package.vulnerability.disclosureDate
      tag: date_package_vulnerability_disclosureDate
      target_field: sysdig.vulnerability.package.vulnerability.disclosure_date
      formats:
        - strict_date
      if: ctx.json?.package?.vulnerability?.disclosureDate != null && ctx.json.package.vulnerability.disclosureDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.package.vulnerability.solutionDate
      tag: date_package_vulnerability_solutionDate
      target_field: sysdig.vulnerability.package.vulnerability.solution_date
      formats:
        - strict_date
      if: ctx.json?.package?.vulnerability?.solutionDate != null && ctx.json.package.vulnerability.solutionDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.producer.producedAt
      tag: date_producer_producedAt
      target_field: sysdig.vulnerability.producer.produced_at
      formats:
        - strict_date_optional_time_nanos
      if: ctx.json?.producer?.producedAt != null && ctx.json.producer.producedAt != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.package.vulnerability.exploit.links
      tag: rename_package_vulnerability_exploit_links
      target_field: sysdig.vulnerability.package.vulnerability.exploit.links
      ignore_missing: true
  - date:
      field: json.package.vulnerability.exploit.publicationDate
      tag: date_package_vulnerability_exploit_publicationDate
      target_field: sysdig.vulnerability.package.vulnerability.exploit.publication_date
      formats:
        - ISO8601
      if: ctx.json?.package?.vulnerability?.exploit?.publicationDate != null && ctx.json.package.vulnerability.exploit.publicationDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.package.vulnerability.exploitable
      tag: convert_package_vulnerability_exploitable_to_boolean
      target_field: sysdig.vulnerability.package.vulnerability.exploitable
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.isRiskSpotlightEnabled
      tag: convert_is_risk_spotlight_enabled_to_boolean
      target_field: sysdig.vulnerability.is_risk_spotlight_enabled
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.package.vulnerability.fixVersion
      tag: rename_package_vulnerability_fixVersion
      target_field: sysdig.vulnerability.package.vulnerability.fix_version
      ignore_missing: true
  - rename:
      field: json.package.vulnerability.mainProvider
      tag: rename_package_vulnerability_mainProvider
      target_field: sysdig.vulnerability.package.vulnerability.main_provider
      ignore_missing: true
  - rename:
      field: json.package.vulnerability.name
      tag: rename_package_vulnerability_name
      target_field: sysdig.vulnerability.package.vulnerability.name
      ignore_missing: true
  - set:
      field: vulnerability.id
      tag: set_vulnerability_id_from_vulnerability_package_vulnerability_name
      copy_from: sysdig.vulnerability.package.vulnerability.name
      ignore_empty_value: true
  - set:
      field: vulnerability.cve
      tag: set_vulnerability_cve_from_vulnerability_package_vulnerability_name
      copy_from: sysdig.vulnerability.package.vulnerability.name
      ignore_empty_value: true
  - set:
      field: vulnerability.reference
      tag: set_vulnerability_reference_from_vulnerability_package_vulnerability_name
      value: 'https://www.cve.org/CVERecord?id={{vulnerability.cve}}'
      ignore_empty_value: true
  - rename:
      field: json.package.vulnerability.packageRef
      tag: rename_package_vulnerability_packageRef
      target_field: sysdig.vulnerability.package.vulnerability.package_ref
      ignore_missing: true
  - foreach:
      field: json.package.vulnerability.riskAccepts
      tag: foreach_package_vulnerability_riskAccepts
      if: ctx.json?.package?.vulnerability?.riskAccepts instanceof List
      processor:
        date:
          field: _ingest._value.createdAt
          tag: date_package_vulnerability_riskAccepts_createdAt
          target_field: _ingest._value.created_at
          formats:
            - strict_date_optional_time_nanos
          on_failure:
            - remove:
                field: _ingest._value.createdAt
                ignore_missing: true
  - foreach:
      field: json.package.vulnerability.riskAccepts
      tag: foreach_package_vulnerability_riskAccepts
      if: ctx.json?.package?.vulnerability?.riskAccepts instanceof List
      processor:
        rename:
          field: _ingest._value.entityType
          tag: rename_package_vulnerability_riskAccepts_entityType
          target_field: _ingest._value.entity_type
          ignore_missing: true
  - foreach:
      field: json.package.vulnerability.riskAccepts
      tag: foreach_package_vulnerability_riskAccepts
      if: ctx.json?.package?.vulnerability?.riskAccepts instanceof List
      processor:
        rename:
          field: _ingest._value.entityValue
          tag: rename_package_vulnerability_riskAccepts_entityValue
          target_field: _ingest._value.entity_value
          ignore_missing: true
  - foreach:
      field: json.package.vulnerability.riskAccepts
      tag: foreach_package_vulnerability_riskAccepts
      if: ctx.json?.package?.vulnerability?.riskAccepts instanceof List
      processor:
        date:
          field: _ingest._value.expirationDate
          tag: date_package_vulnerability_riskAccepts_expirationDate
          target_field: _ingest._value.expiration_date
          formats:
            - date
          on_failure:
            - remove:
                field: _ingest._value.expirationDate
                ignore_missing: true
  - foreach:
      field: json.package.vulnerability.riskAccepts
      tag: foreach_package_vulnerability_riskAccepts
      if: ctx.json?.package?.vulnerability?.riskAccepts instanceof List
      processor:
        rename:
          field: _ingest._value.riskAcceptRefs
          tag: rename_package_vulnerability_riskAccepts_riskAcceptRefs
          target_field: _ingest._value.risk_accept_refs
          ignore_missing: true
  - foreach:
      field: json.package.vulnerability.riskAccepts
      tag: foreach_package_vulnerability_riskAccepts
      if: ctx.json?.package?.vulnerability?.riskAccepts instanceof List
      processor:
        date:
          field: _ingest._value.updatedAt
          tag: date_package_vulnerability_riskAccepts_updatedAt
          target_field: _ingest._value.updated_at
          formats:
            - strict_date_optional_time_nanos
          on_failure:
            - remove:
                field: _ingest._value.updatedAt
                ignore_missing: true
  - foreach:
      field: json.package.vulnerability.riskAccepts
      tag: foreach_package_vulnerability_riskAccepts
      if: ctx.json?.package?.vulnerability?.riskAccepts instanceof List
      processor:
        remove:
          field:
            - _ingest._value.createdAt
            - _ingest._value.expirationDate
            - _ingest._value.updatedAt
          tag: remove_package_vulnerability_riskAccepts
          ignore_missing: true
  - rename:
      field: json.package.vulnerability.riskAccepts
      tag: rename_package_vulnerability_riskAccepts
      target_field: sysdig.vulnerability.package.vulnerability.risk_accepts
      ignore_missing: true
  - rename:
      field: json.package.vulnerability.severity
      tag: rename_package_vulnerability_severity
      target_field: sysdig.vulnerability.package.vulnerability.severity
      ignore_missing: true
  - set:
      field: vulnerability.severity
      tag: set_vulnerability_severity_from_vulnerability_package_vulnerability_severity
      copy_from: sysdig.vulnerability.package.vulnerability.severity
      ignore_empty_value: true
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.severity != "negligible"
  - set:
      field: vulnerability.severity
      tag: set_vulnerability_severity_from_vulnerability_package_vulnerability_severity
      value: Low
      ignore_empty_value: true
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.severity == "negligible"
  - uppercase:
      field: vulnerability.severity
      tag: uppercase_vulnerability_severity
      ignore_missing: true
  - date:
      field: json.producer.producedAt
      tag: date_producer_producedAt
      target_field: sysdig.vulnerability.producer.produced_at
      formats:
        - strict_date_optional_time_nanos
      if: ctx.json?.producer?.producedAt != null && ctx.json.producer.producedAt != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.created
      tag: set_event_created_from_vulnerability_producer_produced_at
      copy_from: sysdig.vulnerability.producer.produced_at
      ignore_empty_value: true
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_vulnerability_producer_produced_at
      copy_from: sysdig.vulnerability.producer.produced_at
      ignore_empty_value: true
  - rename:
      field: json.stage
      tag: rename_stage
      target_field: sysdig.vulnerability.stage
      ignore_missing: true
  - rename:
      field: json.mainAssetName
      tag: rename_stage
      target_field: sysdig.vulnerability.main_asset_name
      ignore_missing: true
  - rename:
      field: json.sbomId
      tag: rename_sbom_id
      target_field: sysdig.vulnerability.sbom_id
      ignore_missing: true
  - rename:
      field: json.scope.cloudProvider
      tag: rename_scope_cloud_provider
      target_field: sysdig.vulnerability.scope.cloud_provider.name
      ignore_missing: true
  - set:
      field: cloud.provider
      tag: set_cloud_provider_from_scope_cloud_provider
      copy_from: sysdig.vulnerability.scope.cloud_provider.name
      ignore_empty_value: true
  - dot_expander:
      field: '*'
      tag: dot_expander_scope
      path: json.scope
      if: ctx.json?.scope != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.scope.asset.type
      tag: rename_scope_asset_type
      target_field: sysdig.vulnerability.scope.asset.type
      ignore_missing: true
  - rename:
      field: json.scope.aws.account.id
      tag: rename_scope_aws_account_id
      target_field: sysdig.vulnerability.scope.aws.account.id
      ignore_missing: true
  - rename:
      field: json.scope.aws.host.name
      tag: rename_scope_aws_host_name
      target_field: sysdig.vulnerability.scope.aws.host.name
      ignore_missing: true
  - rename:
      field: json.scope.aws.region
      tag: rename_scope_aws_region
      target_field: sysdig.vulnerability.scope.aws.region
      ignore_missing: true
  - convert:
      field: json.scope.azure.instance.id
      tag: convert_scop_azure_instanceId_to_string
      target_field: sysdig.vulnerability.scope.azure.instance.id
      type: string
      ignore_missing: true
  - set:
      field: cloud.instance.id
      tag: set_cloud_instance_id_from_scope_azure_instance_id
      copy_from: sysdig.vulnerability.scope.azure.instance.id
      ignore_empty_value: true
  - rename:
      field: json.scope.azure.instance.name
      tag: rename_scope_azure_instance_name
      target_field: sysdig.vulnerability.scope.azure.instance.name
      ignore_missing: true
  - set:
      field: cloud.instance.name
      tag: set_cloud_instance_name_from_scope_azure_instance_name
      copy_from: sysdig.vulnerability.scope.azure.instance.name
      ignore_empty_value: true
  - rename:
      field: json.scope.azure.resourceGroup
      tag: rename_scope_azure_resource_group
      target_field: sysdig.vulnerability.scope.azure.resource_group
      ignore_missing: true
  - rename:
      field: json.scope.azure.subscription.id
      tag: rename_scope_azure_subscription_id
      target_field: sysdig.vulnerability.scope.azure.subscription.id
      ignore_missing: true
  - convert:
      field: json.scope.cloudProvider.account.id
      tag: convert_scope_cloudProvider_account_id_to_string
      target_field: sysdig.vulnerability.scope.cloud_provider.account.id
      type: string
      ignore_missing: true
  - set:
      field: cloud.account.id
      tag: set_cloud_account_id_from_labels_cloud_provider_account_id
      copy_from: sysdig.vulnerability.scope.cloud_provider.account.id
      ignore_empty_value: true
  - set:
      field: cloud.account.id
      tag: set_cloud_account_id_from_aws_account_id
      copy_from: sysdig.vulnerability.scope.aws.account.id
      if: ctx.sysdig?.vulnerability?.scope?.cloud_provider?.account?.id == null && ctx.sysdig?.vulnerability?.scope?.aws?.account?.id != null
      ignore_empty_value: true
  - remove:
      field: sysdig.vulnerability.scope.cloud_provider.account.id
      ignore_missing: true
      if: ctx.sysdig?.vulnerability?.scope?.cloud_provider?.account?.id == null && (ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields'))
  - rename:
      field: json.scope.cloudProvider.region
      tag: rename_scope_cloud_provider_region
      target_field: sysdig.vulnerability.scope.cloud_provider.region
      ignore_missing: true
  - set:
      field: cloud.region
      tag: set_cloud_region_from_scope_cloud_provider_region
      copy_from: sysdig.vulnerability.scope.cloud_provider.region
      ignore_empty_value: true
  - set:
      field: cloud.region
      tag: set_cloud_region_from_aws_region
      copy_from: sysdig.vulnerability.scope.aws.region
      if: ctx.sysdig?.vulnerability?.scope?.cloud_provider?.region == null && ctx.sysdig?.vulnerability?.scope?.aws?.region != null
      ignore_empty_value: true
  - remove:
      field: sysdig.vulnerability.scope.cloud_provider.region
      ignore_missing: true
      if: ctx.sysdig?.vulnerability?.scope?.cloud_provider?.region == null && (ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields'))
  - rename:
      field: json.scope.gcp.instance.id
      tag: rename_scope_gcp_instance_id
      target_field: sysdig.vulnerability.scope.gcp.instance.id
      ignore_missing: true
  - rename:
      field: json.scope.gcp.instance.zone
      tag: rename_scope_gcp_instance_zone
      target_field: sysdig.vulnerability.scope.gcp.instance.zone
      ignore_missing: true
  - rename:
      field: json.scope.gcp.project.id
      tag: rename_scope_gcp_project_id
      target_field: sysdig.vulnerability.scope.gcp.project.id
      ignore_missing: true
  - rename:
      field: json.scope.gcp.project.numericId
      tag: rename_scope_gcp_project_numeric_id
      target_field: sysdig.vulnerability.scope.gcp.project.numeric_id
      ignore_missing: true
  - rename:
      field: json.scope.host.hostName
      tag: rename_scope_host_host_name
      target_field: sysdig.vulnerability.scope.host.host_name
      ignore_missing: true
  - set:
      field: host.hostname
      tag: set_host_hostname_from_scope_host_host_name
      copy_from: sysdig.vulnerability.scope.host.host_name
      ignore_empty_value: true
  - set:
      field: host.name
      tag: set_host_name_from_scope_host_host_name
      copy_from: sysdig.vulnerability.scope.host.host_name
      ignore_empty_value: true
  - rename:
      field: json.scope.kubernetes.cluster.name
      tag: rename_scope_kubernetes_cluster_name
      target_field: sysdig.vulnerability.scope.kubernetes.cluster.name
      ignore_missing: true
  - set:
      field: orchestrator.cluster.name
      tag: set_orchestrator_cluster_name_from_scope_kubernetes_cluster_name
      copy_from: sysdig.vulnerability.scope.kubernetes.cluster.name
      ignore_empty_value: true
  - rename:
      field: json.scope.kubernetes.namespace.name
      tag: rename_scope_kubernetes_namespace_name
      target_field: sysdig.vulnerability.scope.kubernetes.namespace.name
      ignore_missing: true
  - set:
      field: orchestrator.namespace
      tag: set_orchestrator_namespace_from_scope_kubernetes_namespace_name
      copy_from: sysdig.vulnerability.scope.kubernetes.namespace.name
      ignore_empty_value: true
  - rename:
      field: json.scope.kubernetes.node.name
      tag: rename_scope_kubernetes_node_name
      target_field: sysdig.vulnerability.scope.kubernetes.node.name
      ignore_missing: true
  - rename:
      field: json.scope.kubernetes.pod.container.name
      tag: rename_scope_kubernetes_pod_container_name
      target_field: sysdig.vulnerability.scope.kubernetes.pod.container.name
      ignore_missing: true
  - set:
      field: orchestrator.resource.name
      tag: set_orchestrator_resource_name_from_scope_kubernetes_pod_container_name
      copy_from: sysdig.vulnerability.scope.kubernetes.pod.container.name
      ignore_empty_value: true
  - rename:
      field: json.scope.kubernetes.workload.name
      tag: rename_scope_kubernetes_workload_name
      target_field: sysdig.vulnerability.scope.kubernetes.workload.name
      ignore_missing: true
  - rename:
      field: json.scope.kubernetes.workload.type
      tag: rename_scope_kubernetes_workload_type
      target_field: sysdig.vulnerability.scope.kubernetes.workload.type
      ignore_missing: true
  - set:
      field: orchestrator.resource.parent.type
      tag: set_orchestrator_resource_parent_type_from_scope_kubernetes_workload_type
      copy_from: sysdig.vulnerability.scope.kubernetes.workload.type
      ignore_empty_value: true
  - rename:
      field: json.scope.workload.name
      tag: rename_scope_workload_name
      target_field: sysdig.vulnerability.scope.workload.name
      ignore_missing: true
  - rename:
      field: json.scope.workload.orchestrator
      tag: rename_scope_workload_orchestrator
      target_field: sysdig.vulnerability.scope.workload.orchestrator
      ignore_missing: true
  - rename:
      field: json.mainAssetName
      tag: rename_main_asset_name
      target_field: sysdig.vulnerability.main_asset_name
      ignore_missing: true
  - rename:
      field: json.policyEvaluationResult
      tag: rename_policy_evaluation_result
      target_field: sysdig.vulnerability.policy_evaluation_result
      ignore_missing: true
  - rename:
      field: json.resourceId
      tag: rename_resource_id
      target_field: sysdig.vulnerability.resource_id
      ignore_missing: true
  - set:
      field: resource.id
      tag: set_resource_id_from_resource_id
      copy_from: sysdig.vulnerability.resource_id
      ignore_empty_value: true
  - rename:
      field: json.resultId
      tag: rename_result_id
      target_field: sysdig.vulnerability.result_id
      ignore_missing: true
  - set:
      field: vulnerability.report_id
      tag: set_vulnerability_report_id_from_result_id
      copy_from: sysdig.vulnerability.result_id
      ignore_empty_value: true
  - rename:
      field: json.scope.registry.name
      tag: rename_scope_registry_name
      target_field: sysdig.vulnerability.scope.registry.name
      ignore_missing: true
  - rename:
      field: json.scope.registry.vendor
      tag: rename_scope_registry_vendor
      target_field: sysdig.vulnerability.scope.registry.vendor
      ignore_missing: true
  - rename:
      field: json.pullString
      tag: rename_pull_string
      target_field: sysdig.vulnerability.pull_string
      ignore_missing: true
  - dissect:
      field: json.imageId
      tag: dissect_imageId
      pattern: '%{sysdig.vulnerability.image_id_algorithm}:%{sysdig.vulnerability.image_id_hash}'
      ignore_failure: true
  - append:
      field: related.hash
      tag: append_sysdig_vulnerability_image_id_hash_into_related_hash
      value: '{{{sysdig.vulnerability.image_id_hash}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.image_id_hash != null
  - convert:
      field: json.runningVulnTotalBySeverity.critical
      tag: convert_running_vuln_total_by_severity_critical
      target_field: sysdig.vulnerability.running_vuln_total_by_severity.critical
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.runningVulnTotalBySeverity.high
      tag: convert_running_vuln_total_by_severity_high
      target_field: sysdig.vulnerability.running_vuln_total_by_severity.high
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.runningVulnTotalBySeverity.low
      tag: convert_running_vuln_total_by_severity_low
      target_field: sysdig.vulnerability.running_vuln_total_by_severity.low
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.runningVulnTotalBySeverity.medium
      tag: convert_running_vuln_total_by_severity_medium
      target_field: sysdig.vulnerability.running_vuln_total_by_severity.medium
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.runningVulnTotalBySeverity.negligible
      tag: convert_running_vuln_total_by_severity_negligible
      target_field: sysdig.vulnerability.running_vuln_total_by_severity.negligible
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.vulnTotalBySeverity.critical
      tag: convert_vuln_total_by_severity_critical
      target_field: sysdig.vulnerability.vuln_total_by_severity.critical
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.vulnTotalBySeverity.high
      tag: convert_vuln_total_by_severity_high
      target_field: sysdig.vulnerability.vuln_total_by_severity.high
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.vulnTotalBySeverity.low
      tag: convert_vuln_total_by_severity_low
      target_field: sysdig.vulnerability.vuln_total_by_severity.low
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.vulnTotalBySeverity.medium
      tag: convert_vuln_total_by_severity_medium
      target_field: sysdig.vulnerability.vuln_total_by_severity.medium
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.vulnTotalBySeverity.negligible
      tag: convert_vuln_total_by_severity_negligible
      target_field: sysdig.vulnerability.vuln_total_by_severity.negligible
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.createdAt
      tag: date_createdAt
      target_field: sysdig.vulnerability.created_at
      formats:
        - strict_date_optional_time_nanos
      if: ctx.json?.createdAt != null && ctx.json.createdAt != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - remove:
      field:
        - sysdig.vulnerability.metadata.architecture
        - sysdig.vulnerability.metadata.base_os
        - sysdig.vulnerability.metadata.digest_hash
        - sysdig.vulnerability.metadata.host_id
        - sysdig.vulnerability.metadata.labels.homepage
        - sysdig.vulnerability.metadata.labels.org.label_schema.name
        - sysdig.vulnerability.metadata.labels.org.label_schema.vcs_url
        - sysdig.vulnerability.metadata.os
        - sysdig.vulnerability.package.license
        - sysdig.vulnerability.package.name
        - sysdig.vulnerability.package.path
        - sysdig.vulnerability.package.type
        - sysdig.vulnerability.package.version
        - sysdig.vulnerability.package.vulnerability.cvss_score.score
        - sysdig.vulnerability.package.vulnerability.cvss_score.version
        - sysdig.vulnerability.package.vulnerability.name
        - sysdig.vulnerability.package.vulnerability.severity
        - sysdig.vulnerability.package.vulnerability.vulnerabilities_ref
        - sysdig.vulnerability.producer.produced_at
        - sysdig.vulnerability.resource_id
        - sysdig.vulnerability.result_id
        - sysdig.vulnerability.scope.azure.instance.id
        - sysdig.vulnerability.scope.azure.instance.name
        - sysdig.vulnerability.scope.cloud_provider.account.id
        - sysdig.vulnerability.scope.cloud_provider.name
        - sysdig.vulnerability.scope.cloud_provider.region
        - sysdig.vulnerability.scope.host.host_name
        - sysdig.vulnerability.scope.kubernetes.cluster.name
        - sysdig.vulnerability.scope.kubernetes.namespace.name
        - sysdig.vulnerability.scope.kubernetes.pod.container.name
        - sysdig.vulnerability.scope.kubernetes.workload.type
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  # Cleanup
  - script:
      description: This script processor iterates over the whole document to remove fields with null values.
      tag: script_to_drop_null_values
      lang: painless
      source: |
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || v == '<NA>' || v == '-1' ||(v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || v == '<NA>' || v == '-1' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: >-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
